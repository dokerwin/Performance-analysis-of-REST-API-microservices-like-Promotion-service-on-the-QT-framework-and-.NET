// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PromotionServiceNet.Infrastructure.Persistance;

#nullable disable

namespace PromotionServiceNet.Migrations
{
    [DbContext(typeof(EFContext))]
    partial class EFContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.13");

            modelBuilder.Entity("PromotionServiceNet.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("PromotionServiceNet.Domain.Entities.PromoBasket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BasketType")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PromotionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PromotionId");

                    b.ToTable("PromoBasket");
                });

            modelBuilder.Entity("PromotionServiceNet.Domain.Entities.PromoBasketProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BasketId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PromoBasketId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PromoBasketId");

                    b.ToTable("PromoBasketProduct");
                });

            modelBuilder.Entity("PromotionServiceNet.Domain.Entities.Promotion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("DiscountValue")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Promotions");
                });

            modelBuilder.Entity("PromotionServiceNet.Domain.Entities.PromoBasket", b =>
                {
                    b.HasOne("PromotionServiceNet.Domain.Entities.Promotion", null)
                        .WithMany("AssociatedBaskets")
                        .HasForeignKey("PromotionId");
                });

            modelBuilder.Entity("PromotionServiceNet.Domain.Entities.PromoBasketProduct", b =>
                {
                    b.HasOne("PromotionServiceNet.Domain.Entities.PromoBasket", null)
                        .WithMany("AssociatedProducts")
                        .HasForeignKey("PromoBasketId");
                });

            modelBuilder.Entity("PromotionServiceNet.Domain.Entities.PromoBasket", b =>
                {
                    b.Navigation("AssociatedProducts");
                });

            modelBuilder.Entity("PromotionServiceNet.Domain.Entities.Promotion", b =>
                {
                    b.Navigation("AssociatedBaskets");
                });
#pragma warning restore 612, 618
        }
    }
}
